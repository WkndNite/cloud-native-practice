<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.score.mapper.ScoreMapper">
    
    <resultMap id="scoreMap" type="com.example.score.model.Score">
        <id property="enrollmentId" column="enrollment_id"/>
        <result property="studentId" column="student_id"/>
        <result property="courseId" column="course_id"/>
        <result property="grade" column="grade"/>
        <result property="enrolledAt" column="enrolled_at"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="studentName" column="student_name"/>
        <result property="courseName" column="course_name"/>
        <result property="courseType" column="course_type"/>
        <result property="credit" column="credit"/>
    </resultMap>

    <select id="findAll" resultMap="scoreMap">
        SELECT e.*, s.name as student_name, c.course_name, c.course_type, c.credit
        FROM enrollment e
        JOIN student s ON e.student_id = s.student_id
        JOIN course c ON e.course_id = c.course_id
    </select>

    <select id="findById" resultMap="scoreMap">
        SELECT e.*, s.name as student_name, c.course_name, c.course_type, c.credit
        FROM enrollment e
        JOIN student s ON e.student_id = s.student_id
        JOIN course c ON e.course_id = c.course_id
        WHERE e.enrollment_id = #{id}
    </select>

    <select id="findByStudentId" resultMap="scoreMap">
        SELECT e.*, s.name as student_name, c.course_name, c.course_type, c.credit
        FROM enrollment e
        JOIN student s ON e.student_id = s.student_id
        JOIN course c ON e.course_id = c.course_id
        WHERE e.student_id = #{studentId}
    </select>

    <select id="findByCourseId" resultMap="scoreMap">
        SELECT e.*, s.name as student_name, c.course_name, c.course_type, c.credit
        FROM enrollment e
        JOIN student s ON e.student_id = s.student_id
        JOIN course c ON e.course_id = c.course_id
        WHERE e.course_id = #{courseId}
    </select>

    <insert id="insert" parameterType="com.example.score.model.Score">
        INSERT INTO enrollment (student_id, course_id, grade, enrolled_at, created_at, updated_at)
        VALUES (#{studentId}, #{courseId}, #{grade}, NOW(), NOW(), NOW())
    </insert>

    <update id="update" parameterType="com.example.score.model.Score">
        UPDATE enrollment
        SET grade = #{grade},
            updated_at = NOW()
        WHERE enrollment_id = #{enrollmentId}
    </update>

    <delete id="deleteById">
        DELETE FROM enrollment WHERE enrollment_id = #{id}
    </delete>

    <select id="getAverageScoreByStudentId" resultType="java.lang.Double">
        SELECT AVG(grade) FROM enrollment WHERE student_id = #{studentId}
    </select>

    <select id="getAverageScoreByCourseId" resultType="java.lang.Double">
        SELECT AVG(grade) FROM enrollment WHERE course_id = #{courseId}
    </select>

    <select id="findStudentScoresWithDetails" resultMap="scoreMap">
        SELECT e.*, s.name as student_name, c.course_name, c.course_type, c.credit
        FROM enrollment e
        JOIN student s ON e.student_id = s.student_id
        JOIN course c ON e.course_id = c.course_id
        WHERE e.student_id = #{studentId}
        ORDER BY c.course_name
    </select>

    <select id="findCourseScoresWithDetails" resultMap="scoreMap">
        SELECT e.*, s.name as student_name, c.course_name, c.course_type, c.credit
        FROM enrollment e
        JOIN student s ON e.student_id = s.student_id
        JOIN course c ON e.course_id = c.course_id
        WHERE e.course_id = #{courseId}
        ORDER BY s.name
    </select>
</mapper> 